{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/al55/dev/react-mesto-api-full/frontend/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFormWithValidation } from \"../hooks/useFormWithValidation\";\n\nconst Login = ({\n  onLogin\n}) => {\n  _s();\n\n  // Используем пользовательский Хук\n  const {\n    values,\n    handleChange,\n    resetFrom,\n    errors,\n    isValid,\n    isValidInputs\n  } = useFormWithValidation();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onLogin(values).then(resetFrom()).catch(err => {\n      console.log(err.message || 'Что то пошло не так');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"login content page__content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"login__title\",\n        children: \"\\u0412\\u0445\\u043E\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login__form\",\n        name: \"form\",\n        id: \"form-with-login\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: `login__input login__input_type_email\n        ${isValidInputs.email ? 'login__input_state_valid' : ''}`,\n          type: \"email\",\n          placeholder: \"Email\",\n          name: \"email\",\n          id: \"login-input-email\",\n          maxLength: \"100\",\n          value: values.email || '',\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"login-input-email-error\",\n          className: \"login__error\",\n          children: errors.email || \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: `login__input login__input_type_password\n        ${isValidInputs.password ? 'login__input_state_valid' : ''}`,\n          type: \"password\",\n          placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          name: \"password\",\n          id: \"login-input-password\",\n          maxLength: \"50\",\n          value: values.password || \"\",\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"login-input-password-error\",\n          className: \"login__error\",\n          children: errors.password || \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `button login__button-submit \n            ${!isValid ? 'login__button-submit_invalid' : ''}`,\n          type: \"submit\",\n          children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"dGDyABhnSH7URzFs/zUUPbaYjbM=\", false, function () {\n  return [useFormWithValidation];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/al55/dev/react-mesto-api-full/frontend/src/components/Login.js"],"names":["React","useFormWithValidation","Login","onLogin","values","handleChange","resetFrom","errors","isValid","isValidInputs","handleSubmit","e","preventDefault","then","catch","err","console","log","message","email","password"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,qBAAT,QAAsC,gCAAtC;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AAE7B;AACA,QAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,MAJI;AAKJC,IAAAA,OALI;AAMJC,IAAAA;AANI,MAOFR,qBAAqB,EAPzB;;AAUA,QAAMS,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AAEAT,IAAAA,OAAO,CAACC,MAAD,CAAP,CACGS,IADH,CACQP,SAAS,EADjB,EAEGQ,KAFH,CAESC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAJ,IAAe,qBAA3B;AACD,KAJH;AAKD,GARD;;AAUA,sBACE;AAAM,IAAA,SAAS,EAAC,6BAAhB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,SAAS,EAAC,aADZ;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,EAAE,EAAC,iBAHL;AAIE,QAAA,QAAQ,EAAER,YAJZ;AAAA,gCAKE;AACE,UAAA,SAAS,EAAG;AACxB,UAAUD,aAAa,CAACU,KAAd,GACQ,0BADR,GAEQ,EACH,EALL;AAME,UAAA,IAAI,EAAC,OANP;AAOE,UAAA,WAAW,EAAC,OAPd;AAQE,UAAA,IAAI,EAAC,OARP;AASE,UAAA,EAAE,EAAC,mBATL;AAUE,UAAA,SAAS,EAAC,KAVZ;AAWE,UAAA,KAAK,EAAEf,MAAM,CAACe,KAAP,IAAgB,EAXzB;AAYE,UAAA,QAAQ,EAAEd,YAZZ;AAaE,UAAA,QAAQ;AAbV;AAAA;AAAA;AAAA;AAAA,gBALF,eAoBE;AACE,UAAA,EAAE,EAAC,yBADL;AAEE,UAAA,SAAS,EAAC,cAFZ;AAAA,oBAGGE,MAAM,CAACY,KAAP,IAAgB;AAHnB;AAAA;AAAA;AAAA;AAAA,gBApBF,eA0BE;AACE,UAAA,SAAS,EAAG;AACxB,UAAUV,aAAa,CAACW,QAAd,GACQ,0BADR,GAEQ,EACH,EALL;AAME,UAAA,IAAI,EAAC,UANP;AAOE,UAAA,WAAW,EAAC,sCAPd;AAQE,UAAA,IAAI,EAAC,UARP;AASE,UAAA,EAAE,EAAC,sBATL;AAUE,UAAA,SAAS,EAAC,IAVZ;AAWE,UAAA,KAAK,EAAEhB,MAAM,CAACgB,QAAP,IAAmB,EAX5B;AAYE,UAAA,QAAQ,EAAEf,YAZZ;AAaE,UAAA,QAAQ;AAbV;AAAA;AAAA;AAAA;AAAA,gBA1BF,eAyCE;AACE,UAAA,EAAE,EAAC,4BADL;AAEE,UAAA,SAAS,EAAC,cAFZ;AAAA,oBAGGE,MAAM,CAACa,QAAP,IAAmB;AAHtB;AAAA;AAAA;AAAA;AAAA,gBAzCF,eA+CE;AACE,UAAA,SAAS,EAAG;AACxB,cAAc,CAACZ,OAAD,GACI,8BADJ,GAEI,EACH,EALL;AAME,UAAA,IAAI,EAAC,QANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/CF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgED,CAvFD;;GAAMN,K;UAUAD,qB;;;KAVAC,K;AAyFN,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport { useFormWithValidation } from \"../hooks/useFormWithValidation\";\n\nconst Login = ({ onLogin }) => {\n\n  // Используем пользовательский Хук\n  const {\n    values,\n    handleChange,\n    resetFrom,\n    errors,\n    isValid,\n    isValidInputs\n  } = useFormWithValidation();\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    onLogin(values)\n      .then(resetFrom())\n      .catch(err => {\n        console.log(err.message || 'Что то пошло не так')\n      })\n  }\n\n  return (\n    <main className=\"login content page__content\">\n      <div className=\"login__container\">\n        <h2 className=\"login__title\">Вход</h2>\n        <form\n          className=\"login__form\"\n          name=\"form\"\n          id=\"form-with-login\"\n          onSubmit={handleSubmit}>\n          <input\n            className={`login__input login__input_type_email\n        ${isValidInputs.email\n                ? 'login__input_state_valid'\n                : ''\n              }`}\n            type=\"email\"\n            placeholder=\"Email\"\n            name=\"email\"\n            id=\"login-input-email\"\n            maxLength=\"100\"\n            value={values.email || ''}\n            onChange={handleChange}\n            required\n          />\n          <span\n            id=\"login-input-email-error\"\n            className=\"login__error\">\n            {errors.email || \"\"}\n          </span>\n\n          <input\n            className={`login__input login__input_type_password\n        ${isValidInputs.password\n                ? 'login__input_state_valid'\n                : ''\n              }`}\n            type=\"password\"\n            placeholder=\"Пароль\"\n            name=\"password\"\n            id=\"login-input-password\"\n            maxLength=\"50\"\n            value={values.password || \"\"}\n            onChange={handleChange}\n            required\n          />\n          <span\n            id=\"login-input-password-error\"\n            className=\"login__error\">\n            {errors.password || \"\"}\n          </span>\n\n          <button\n            className={`button login__button-submit \n            ${!isValid\n                ? 'login__button-submit_invalid'\n                : ''\n              }`}\n            type=\"submit\">\n            Войти\n          </button>\n        </form>\n      </div>\n    </main>\n  );\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}