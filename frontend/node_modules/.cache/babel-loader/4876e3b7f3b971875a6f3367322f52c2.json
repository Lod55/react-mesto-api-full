{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/al55/dev/react-mesto-api-full/frontend/src/components/AddPlacePopup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { useFormWithValidation } from \"../hooks/useFormWithValidation\";\n\nconst AddPlacePopup = props => {\n  _s();\n\n  // Диструктуризированная переменная с пропсами\n  const {\n    onAddPlace,\n    isOpen,\n    onClose\n  } = props; // Используем пользовательский Хук\n\n  const {\n    values,\n    handleChange,\n    resetFrom,\n    errors,\n    isValid,\n    isValidInputs\n  } = useFormWithValidation(); // Контроль за открытием попапа и ресетом\n\n  useEffect(() => {\n    resetFrom();\n  }, [isOpen, resetFrom]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onAddPlace(values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"add-card\",\n    title: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",\n    textButton: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    isOpen: isOpen,\n    onClose: onClose,\n    onSubmit: handleSubmit,\n    isDisabled: !isValid,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: `popup__input popup__input_type_place-name \n        ${isValidInputs.name ? 'popup__input_state_valid' : ''}`,\n      type: \"text\",\n      placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n      name: \"name\",\n      id: \"popup-input-place-name\",\n      minLength: \"2\",\n      maxLength: \"30\",\n      value: values.name || \"\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"popup-input-place-name-error\",\n      className: \"popup__error\",\n      children: errors.name || \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: `popup__input popup__input_type_photo \n        ${isValidInputs.link ? 'popup__input_state_valid' : ''}`,\n      type: \"url\",\n      placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n      id: \"popup-input-url\",\n      name: \"link\",\n      minLength: \"7\",\n      maxLength: \"300\",\n      value: values.link || \"\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"popup-input-url-error\",\n      className: \"popup__error\",\n      children: errors.link || \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddPlacePopup, \"pTy73EvyUWZbH9bJ+O5GEQuvz3E=\", false, function () {\n  return [useFormWithValidation];\n});\n\n_c = AddPlacePopup;\nexport default AddPlacePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPlacePopup\");","map":{"version":3,"sources":["/Users/al55/dev/react-mesto-api-full/frontend/src/components/AddPlacePopup.js"],"names":["React","useEffect","PopupWithForm","useFormWithValidation","AddPlacePopup","props","onAddPlace","isOpen","onClose","values","handleChange","resetFrom","errors","isValid","isValidInputs","handleSubmit","e","preventDefault","name","link"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,qBAAT,QAAsC,gCAAtC;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC/B;AACA,QAAM;AACJC,IAAAA,UADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA;AAHI,MAIFH,KAJJ,CAF+B,CAQ/B;;AACA,QAAM;AACJI,IAAAA,MADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,MAJI;AAKJC,IAAAA,OALI;AAMJC,IAAAA;AANI,MAOFX,qBAAqB,EAPzB,CAT+B,CAkB/B;;AACAF,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,SAAS;AACV,GAFQ,EAEN,CAACJ,MAAD,EAASI,SAAT,CAFM,CAAT;;AAIA,QAAMI,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAX,IAAAA,UAAU,CAACG,MAAD,CAAV;AACD,GAHD;;AAKA,sBACE,QAAC,aAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,KAAK,EAAC,+DAFR;AAGE,IAAA,UAAU,EAAC,wDAHb;AAIE,IAAA,MAAM,EAAEF,MAJV;AAKE,IAAA,OAAO,EAAEC,OALX;AAME,IAAA,QAAQ,EAAEO,YANZ;AAOE,IAAA,UAAU,EAAE,CAACF,OAPf;AAAA,4BASE;AACE,MAAA,SAAS,EAAG;AACpB,UAAUC,aAAa,CAACI,IAAd,GACK,0BADL,GAEK,EACJ,EALL;AAME,MAAA,IAAI,EAAC,MANP;AAOE,MAAA,WAAW,EAAC,kDAPd;AAQE,MAAA,IAAI,EAAC,MARP;AASE,MAAA,EAAE,EAAC,wBATL;AAUE,MAAA,SAAS,EAAC,GAVZ;AAWE,MAAA,SAAS,EAAC,IAXZ;AAYE,MAAA,KAAK,EAAET,MAAM,CAACS,IAAP,IAAe,EAZxB;AAaE,MAAA,QAAQ,EAAER,YAbZ;AAcE,MAAA,QAAQ;AAdV;AAAA;AAAA;AAAA;AAAA,YATF,eAyBE;AACE,MAAA,EAAE,EAAC,8BADL;AAEE,MAAA,SAAS,EAAC,cAFZ;AAAA,gBAGGE,MAAM,CAACM,IAAP,IAAe;AAHlB;AAAA;AAAA;AAAA;AAAA,YAzBF,eA+BE;AACE,MAAA,SAAS,EAAG;AACpB,UAAUJ,aAAa,CAACK,IAAd,GACK,0BADL,GAEK,EACJ,EALL;AAME,MAAA,IAAI,EAAC,KANP;AAOE,MAAA,WAAW,EAAC,oGAPd;AAQE,MAAA,EAAE,EAAC,iBARL;AASE,MAAA,IAAI,EAAC,MATP;AAUE,MAAA,SAAS,EAAC,GAVZ;AAWE,MAAA,SAAS,EAAC,KAXZ;AAYE,MAAA,KAAK,EAAEV,MAAM,CAACU,IAAP,IAAe,EAZxB;AAaE,MAAA,QAAQ,EAAET,YAbZ;AAcE,MAAA,QAAQ;AAdV;AAAA;AAAA;AAAA;AAAA,YA/BF,eA+CE;AACE,MAAA,EAAE,EAAC,uBADL;AAEE,MAAA,SAAS,EAAC,cAFZ;AAAA,gBAGGE,MAAM,CAACO,IAAP,IAAe;AAHlB;AAAA;AAAA;AAAA;AAAA,YA/CF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuDD,CAnFD;;GAAMf,a;UAgBAD,qB;;;KAhBAC,a;AAqFN,eAAeA,aAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { useFormWithValidation } from \"../hooks/useFormWithValidation\";\n\nconst AddPlacePopup = (props) => {\n  // Диструктуризированная переменная с пропсами\n  const {\n    onAddPlace,\n    isOpen,\n    onClose\n  } = props;\n\n  // Используем пользовательский Хук\n  const {\n    values,\n    handleChange,\n    resetFrom,\n    errors,\n    isValid,\n    isValidInputs\n  } = useFormWithValidation();\n\n  // Контроль за открытием попапа и ресетом\n  useEffect(() => {\n    resetFrom()\n  }, [isOpen, resetFrom]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onAddPlace(values)\n  }\n\n  return (\n    <PopupWithForm\n      name=\"add-card\"\n      title=\"Новое место\"\n      textButton=\"Сохранить\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      isDisabled={!isValid}\n    >\n      <input\n        className={`popup__input popup__input_type_place-name \n        ${isValidInputs.name\n            ? ('popup__input_state_valid')\n            : ('')\n          }`}\n        type=\"text\"\n        placeholder=\"Название\"\n        name=\"name\"\n        id=\"popup-input-place-name\"\n        minLength=\"2\"\n        maxLength=\"30\"\n        value={values.name || \"\"}\n        onChange={handleChange}\n        required\n      />\n      <span\n        id=\"popup-input-place-name-error\"\n        className=\"popup__error\">\n        {errors.name || \"\"}\n      </span>\n\n      <input\n        className={`popup__input popup__input_type_photo \n        ${isValidInputs.link\n            ? ('popup__input_state_valid')\n            : ('')\n          }`}\n        type=\"url\"\n        placeholder=\"Ссылка на картинку\"\n        id=\"popup-input-url\"\n        name=\"link\"\n        minLength=\"7\"\n        maxLength=\"300\"\n        value={values.link || \"\"}\n        onChange={handleChange}\n        required\n      />\n      <span\n        id=\"popup-input-url-error\"\n        className=\"popup__error\">\n        {errors.link || \"\"}\n      </span>\n    </PopupWithForm>\n  );\n}\n\nexport default AddPlacePopup;"]},"metadata":{},"sourceType":"module"}