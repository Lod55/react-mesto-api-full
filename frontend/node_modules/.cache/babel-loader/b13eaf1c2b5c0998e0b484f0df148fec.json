{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/al55/dev/react-mesto-api-full/frontend/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport Card from './Card.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'; // popup components\n\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport RemovePlacePopup from './RemovePlacePopup';\n\nconst Main = props => {\n  _s();\n\n  // Диструктуризированная переменная с пропсами\n  const {\n    isLoading,\n    cards,\n    onCardDelete,\n    onCardLike,\n    onAddPlaceSubmit,\n    onUpdateAvatar,\n    onUpdateUser\n  } = props;\n  const currentUser = useContext(CurrentUserContext); // Стейт переменные компонента\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isRemovePlacePopupOpen, setIsRemovePlacePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({\n    isOpen: false,\n    owner: {\n      name: ''\n    }\n  });\n  const [useCardId, setUseCardId] = useState(''); // функции открытия попапов\n\n  const handleEditProfileClick = () => setIsEditProfilePopupOpen(true);\n\n  const handleAddPlaceClick = () => setIsAddPlacePopupOpen(true);\n\n  const handleEditAvatarClick = () => setIsEditAvatarPopupOpen(true);\n\n  const handleCardClick = data => setSelectedCard({\n    isOpen: true,\n    ...data\n  });\n\n  const handleTrashClick = card => {\n    setIsRemovePlacePopupOpen(true);\n    setUseCardId(card._id);\n  }; // функция закрытия всех попапов\n\n\n  const closeAllPopups = () => {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsRemovePlacePopupOpen(false);\n    setSelectedCard({\n      isOpen: false,\n      owner: {\n        name: ''\n      }\n    });\n  };\n\n  const handleUpdateUser = data => {\n    onUpdateUser(data).then(closeAllPopups).catch(err => console.log(`Error: ${err}`));\n  };\n\n  const handleUpdateAvatar = data => {\n    onUpdateAvatar(data.avatar).then(closeAllPopups).catch(err => console.log(`Error: ${err}`));\n  };\n\n  const handleAddPlaceSubmit = data => {\n    onAddPlaceSubmit(data).then(closeAllPopups).catch(err => console.log(`Error: ${err}`));\n  };\n\n  const handleCardLike = card => {\n    onCardLike(card).catch(err => console.log(`Error: ${err}`));\n  };\n\n  const handleCardDelete = () => {\n    onCardDelete(useCardId).then(closeAllPopups).catch(err => console.log(`Error: ${err}`));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"content page__content\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"profile content__item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__overlay\",\n          onClick: handleEditAvatarClick,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: currentUser.avatar || \"#\",\n            alt: `Аватар ${currentUser.name || \"\"}`,\n            className: \"profile__avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__text-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile__row-block\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"profile__author\",\n              children: currentUser.name || \"Загрузка...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button profile__button-edit\",\n              type: \"button\",\n              onClick: handleEditProfileClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"profile__status\",\n            children: currentUser.about || \"пожалуйста, подождите\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button profile__button-add\",\n          type: \"button\",\n          onClick: handleAddPlaceClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 14\n      }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"places content__item\",\n        children: cards.map(item => /*#__PURE__*/_jsxDEV(Card, {\n          card: item,\n          onImageClick: handleCardClick,\n          onCardLike: handleCardLike,\n          onCardTrash: handleTrashClick\n        }, item._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n      isOpen: isEditProfilePopupOpen,\n      onClose: closeAllPopups,\n      onUpdateUser: handleUpdateUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n      isOpen: isAddPlacePopupOpen,\n      onClose: closeAllPopups,\n      onAddPlace: handleAddPlaceSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n      isOpen: isEditAvatarPopupOpen,\n      onClose: closeAllPopups,\n      onUpdateAvatar: handleUpdateAvatar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RemovePlacePopup, {\n      isOpen: isRemovePlacePopupOpen,\n      onClose: closeAllPopups,\n      onDeleteCard: handleCardDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n      card: selectedCard,\n      onClose: closeAllPopups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Main, \"VSJFt758H6JPVck6NgUjI6r6CFE=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/al55/dev/react-mesto-api-full/frontend/src/components/Main.js"],"names":["React","useContext","useState","Card","CurrentUserContext","ImagePopup","EditProfilePopup","EditAvatarPopup","AddPlacePopup","RemovePlacePopup","Main","props","isLoading","cards","onCardDelete","onCardLike","onAddPlaceSubmit","onUpdateAvatar","onUpdateUser","currentUser","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isRemovePlacePopupOpen","setIsRemovePlacePopupOpen","selectedCard","setSelectedCard","isOpen","owner","name","useCardId","setUseCardId","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","handleCardClick","data","handleTrashClick","card","_id","closeAllPopups","handleUpdateUser","then","catch","err","console","log","handleUpdateAvatar","avatar","handleAddPlaceSubmit","handleCardLike","handleCardDelete","about","map","item"],"mappings":";;;;;;AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,kBAAT,QAAmC,gCAAnC,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB;AACA,QAAM;AACJC,IAAAA,SADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,UAJI;AAKJC,IAAAA,gBALI;AAMJC,IAAAA,cANI;AAOJC,IAAAA;AAPI,MASFP,KATJ;AAWA,QAAMQ,WAAW,GAAGlB,UAAU,CAACG,kBAAD,CAA9B,CAbsB,CAetB;;AACA,QAAM,CAACgB,sBAAD,EAAyBC,yBAAzB,IAAsDnB,QAAQ,CAAC,KAAD,CAApE;AACA,QAAM,CAACoB,mBAAD,EAAsBC,sBAAtB,IAAgDrB,QAAQ,CAAC,KAAD,CAA9D;AACA,QAAM,CAACsB,qBAAD,EAAwBC,wBAAxB,IAAoDvB,QAAQ,CAAC,KAAD,CAAlE;AACA,QAAM,CAACwB,sBAAD,EAAyBC,yBAAzB,IAAsDzB,QAAQ,CAAC,KAAD,CAApE;AACA,QAAM,CAAC0B,YAAD,EAAeC,eAAf,IAAkC3B,QAAQ,CAAC;AAC/C4B,IAAAA,MAAM,EAAE,KADuC;AAE/CC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR;AAFwC,GAAD,CAAhD;AAIA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BhC,QAAQ,CAAC,EAAD,CAA1C,CAxBsB,CA0BtB;;AACA,QAAMiC,sBAAsB,GAAG,MAAMd,yBAAyB,CAAC,IAAD,CAA9D;;AACA,QAAMe,mBAAmB,GAAG,MAAMb,sBAAsB,CAAC,IAAD,CAAxD;;AACA,QAAMc,qBAAqB,GAAG,MAAMZ,wBAAwB,CAAC,IAAD,CAA5D;;AACA,QAAMa,eAAe,GAAIC,IAAD,IAAUV,eAAe,CAAC;AAChDC,IAAAA,MAAM,EAAE,IADwC;AAEhD,OAAGS;AAF6C,GAAD,CAAjD;;AAIA,QAAMC,gBAAgB,GAAIC,IAAD,IAAU;AACjCd,IAAAA,yBAAyB,CAAC,IAAD,CAAzB;AACAO,IAAAA,YAAY,CAACO,IAAI,CAACC,GAAN,CAAZ;AACD,GAHD,CAlCsB,CAuCtB;;;AACA,QAAMC,cAAc,GAAG,MAAM;AAC3BtB,IAAAA,yBAAyB,CAAC,KAAD,CAAzB;AACAE,IAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACAE,IAAAA,wBAAwB,CAAC,KAAD,CAAxB;AACAE,IAAAA,yBAAyB,CAAC,KAAD,CAAzB;AACAE,IAAAA,eAAe,CAAC;AACdC,MAAAA,MAAM,EAAE,KADM;AAEdC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR;AAFO,KAAD,CAAf;AAID,GATD;;AAWA,QAAMY,gBAAgB,GAAIL,IAAD,IAAU;AACjCrB,IAAAA,YAAY,CAACqB,IAAD,CAAZ,CACGM,IADH,CACQF,cADR,EAEGG,KAFH,CAESC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAa,UAASF,GAAI,EAA1B,CAFhB;AAGD,GAJD;;AAMA,QAAMG,kBAAkB,GAAIX,IAAD,IAAU;AACnCtB,IAAAA,cAAc,CAACsB,IAAI,CAACY,MAAN,CAAd,CACGN,IADH,CACQF,cADR,EAEGG,KAFH,CAESC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAa,UAASF,GAAI,EAA1B,CAFhB;AAGD,GAJD;;AAMA,QAAMK,oBAAoB,GAAIb,IAAD,IAAU;AACrCvB,IAAAA,gBAAgB,CAACuB,IAAD,CAAhB,CACGM,IADH,CACQF,cADR,EAEGG,KAFH,CAESC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAa,UAASF,GAAI,EAA1B,CAFhB;AAGD,GAJD;;AAMA,QAAMM,cAAc,GAAIZ,IAAD,IAAU;AAC/B1B,IAAAA,UAAU,CAAC0B,IAAD,CAAV,CACGK,KADH,CACSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAa,UAASF,GAAI,EAA1B,CADhB;AAED,GAHD;;AAKA,QAAMO,gBAAgB,GAAG,MAAM;AAC7BxC,IAAAA,YAAY,CAACmB,SAAD,CAAZ,CACGY,IADH,CACQF,cADR,EAEGG,KAFH,CAESC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAa,UAASF,GAAI,EAA1B,CAFhB;AAGD,GAJD;;AAMA,sBACE;AAAA,4BACE;AAAM,MAAA,SAAS,EAAE,uBAAjB;AAAA,8BACE;AAAS,QAAA,SAAS,EAAE,uBAApB;AAAA,gCACE;AACE,UAAA,SAAS,EAAE,kBADb;AAEE,UAAA,OAAO,EAAEV,qBAFX;AAAA,iCAGE;AACE,YAAA,GAAG,EAAElB,WAAW,CAACgC,MAAZ,IAAsB,GAD7B;AAEE,YAAA,GAAG,EAAG,UAAShC,WAAW,CAACa,IAAZ,IAAoB,EAAG,EAFxC;AAGE,YAAA,SAAS,EAAE;AAHb;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AAAK,UAAA,SAAS,EAAE,qBAAhB;AAAA,kCACE;AAAK,YAAA,SAAS,EAAE,oBAAhB;AAAA,oCACE;AACE,cAAA,SAAS,EAAE,iBADb;AAAA,wBAEGb,WAAW,CAACa,IAAZ,IAAoB;AAFvB;AAAA;AAAA;AAAA;AAAA,oBADF,eAKE;AACE,cAAA,SAAS,EAAE,6BADb;AAEE,cAAA,IAAI,EAAE,QAFR;AAGE,cAAA,OAAO,EAAEG;AAHX;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAYE;AACE,YAAA,SAAS,EAAE,iBADb;AAAA,sBAEGhB,WAAW,CAACoC,KAAZ,IAAqB;AAFxB;AAAA;AAAA;AAAA;AAAA,kBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,eA0BE;AACE,UAAA,SAAS,EAAC,4BADZ;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,OAAO,EAAEnB;AAHX;AAAA;AAAA;AAAA;AAAA,gBA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAkCGxB,SAAS,gBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADK,gBAEL;AAAS,QAAA,SAAS,EAAE,sBAApB;AAAA,kBACAC,KAAK,CAAC2C,GAAN,CAAUC,IAAI,iBACb,QAAC,IAAD;AAEE,UAAA,IAAI,EAAEA,IAFR;AAGE,UAAA,YAAY,EAAEnB,eAHhB;AAIE,UAAA,UAAU,EAAEe,cAJd;AAKE,UAAA,WAAW,EAAEb;AALf,WACOiB,IAAI,CAACf,GADZ;AAAA;AAAA;AAAA;AAAA,gBADD;AADA;AAAA;AAAA;AAAA;AAAA,cApCP;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAoDE,QAAC,gBAAD;AACE,MAAA,MAAM,EAAEtB,sBADV;AAEE,MAAA,OAAO,EAAEuB,cAFX;AAGE,MAAA,YAAY,EAAEC;AAHhB;AAAA;AAAA;AAAA;AAAA,YApDF,eA0DE,QAAC,aAAD;AACE,MAAA,MAAM,EAAEtB,mBADV;AAEE,MAAA,OAAO,EAAEqB,cAFX;AAGE,MAAA,UAAU,EAAES;AAHd;AAAA;AAAA;AAAA;AAAA,YA1DF,eAgEE,QAAC,eAAD;AACE,MAAA,MAAM,EAAE5B,qBADV;AAEE,MAAA,OAAO,EAAEmB,cAFX;AAGE,MAAA,cAAc,EAAEO;AAHlB;AAAA;AAAA;AAAA;AAAA,YAhEF,eAsEE,QAAC,gBAAD;AACE,MAAA,MAAM,EAAExB,sBADV;AAEE,MAAA,OAAO,EAAEiB,cAFX;AAGE,MAAA,YAAY,EAAEW;AAHhB;AAAA;AAAA;AAAA;AAAA,YAtEF,eA4EE,QAAC,UAAD;AACE,MAAA,IAAI,EAAE1B,YADR;AAEE,MAAA,OAAO,EAAEe;AAFX;AAAA;AAAA;AAAA;AAAA,YA5EF;AAAA,kBADF;AAmFD,CAnKD;;GAAMjC,I;;KAAAA,I;AAqKN,eAAeA,IAAf","sourcesContent":["\nimport React, { useContext, useState } from 'react';\nimport Card from './Card.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\n// popup components\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport RemovePlacePopup from './RemovePlacePopup';\n\nconst Main = (props) => {\n  // Диструктуризированная переменная с пропсами\n  const {\n    isLoading,\n    cards,\n    onCardDelete,\n    onCardLike,\n    onAddPlaceSubmit,\n    onUpdateAvatar,\n    onUpdateUser\n\n  } = props\n\n  const currentUser = useContext(CurrentUserContext);\n\n  // Стейт переменные компонента\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isRemovePlacePopupOpen, setIsRemovePlacePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({\n    isOpen: false,\n    owner: { name: '' }\n  });\n  const [useCardId, setUseCardId] = useState('');\n\n  // функции открытия попапов\n  const handleEditProfileClick = () => setIsEditProfilePopupOpen(true);\n  const handleAddPlaceClick = () => setIsAddPlacePopupOpen(true);\n  const handleEditAvatarClick = () => setIsEditAvatarPopupOpen(true);\n  const handleCardClick = (data) => setSelectedCard({\n    isOpen: true,\n    ...data\n  });\n  const handleTrashClick = (card) => {\n    setIsRemovePlacePopupOpen(true)\n    setUseCardId(card._id)\n  }\n\n  // функция закрытия всех попапов\n  const closeAllPopups = () => {\n    setIsEditProfilePopupOpen(false)\n    setIsAddPlacePopupOpen(false)\n    setIsEditAvatarPopupOpen(false)\n    setIsRemovePlacePopupOpen(false)\n    setSelectedCard({\n      isOpen: false,\n      owner: { name: '' }\n    })\n  }\n\n  const handleUpdateUser = (data) => {\n    onUpdateUser(data)\n      .then(closeAllPopups)\n      .catch(err => console.log(`Error: ${err}`));\n  }\n\n  const handleUpdateAvatar = (data) => {\n    onUpdateAvatar(data.avatar)\n      .then(closeAllPopups)\n      .catch(err => console.log(`Error: ${err}`));\n  }\n\n  const handleAddPlaceSubmit = (data) => {\n    onAddPlaceSubmit(data)\n      .then(closeAllPopups)\n      .catch(err => console.log(`Error: ${err}`));\n  }\n\n  const handleCardLike = (card) => {\n    onCardLike(card)\n      .catch(err => console.log(`Error: ${err}`));\n  }\n\n  const handleCardDelete = () => {\n    onCardDelete(useCardId)\n      .then(closeAllPopups)\n      .catch(err => console.log(`Error: ${err}`));\n  }\n\n  return (\n    <>\n      <main className={\"content page__content\"}>\n        <section className={\"profile content__item\"}>\n          <div\n            className={\"profile__overlay\"}\n            onClick={handleEditAvatarClick}>\n            <img\n              src={currentUser.avatar || \"#\"}\n              alt={`Аватар ${currentUser.name || \"\"}`}\n              className={\"profile__avatar\"} />\n          </div>\n          <div className={\"profile__text-block\"}>\n            <div className={\"profile__row-block\"}>\n              <h1\n                className={\"profile__author\"}>\n                {currentUser.name || \"Загрузка...\"}\n              </h1>\n              <button\n                className={\"button profile__button-edit\"}\n                type={\"button\"}\n                onClick={handleEditProfileClick}>\n              </button>\n            </div>\n            <p\n              className={\"profile__status\"}>\n              {currentUser.about || \"пожалуйста, подождите\"}\n            </p>\n          </div>\n          <button\n            className=\"button profile__button-add\"\n            type=\"button\"\n            onClick={handleAddPlaceClick}>\n          </button>\n        </section>\n\n        {isLoading\n          ? (<p>Загрузка...</p>)\n          : (<section className={\"places content__item\"}>\n            {cards.map(item => (\n              <Card\n                key={item._id}\n                card={item}\n                onImageClick={handleCardClick}\n                onCardLike={handleCardLike}\n                onCardTrash={handleTrashClick}\n              />\n            )\n            )}\n          </section>)\n        }\n      </main>\n\n      <EditProfilePopup\n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}\n        onUpdateUser={handleUpdateUser}\n      />\n\n      <AddPlacePopup\n        isOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopups}\n        onAddPlace={handleAddPlaceSubmit}\n      />\n\n      <EditAvatarPopup\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}\n        onUpdateAvatar={handleUpdateAvatar}\n      />\n\n      <RemovePlacePopup\n        isOpen={isRemovePlacePopupOpen}\n        onClose={closeAllPopups}\n        onDeleteCard={handleCardDelete}\n      />\n\n      <ImagePopup\n        card={selectedCard}\n        onClose={closeAllPopups}\n      />\n    </>\n  )\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}