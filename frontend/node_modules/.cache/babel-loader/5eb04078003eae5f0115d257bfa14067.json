{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/al55/dev/react-mesto-api-full/frontend/src/components/Register.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useFormWithValidation } from \"../hooks/useFormWithValidation\";\n\nconst Register = ({\n  onRegister\n}) => {\n  _s();\n\n  // Используем пользовательский Хук\n  const {\n    values,\n    handleChange,\n    resetFrom,\n    errors,\n    isValid,\n    isValidInputs\n  } = useFormWithValidation();\n\n  const handleSubmit = e => {\n    e.preventDefault(); // Проверяем совпадение паролей\n\n    if (values.password !== values.confirmation) {\n      resetFrom({\n        email: values.email\n      }, {\n        password: 'Пароли не совпадают',\n        confirmation: 'Пароли не совпадают'\n      }, false, {\n        email: true\n      });\n      return;\n    } // Запрос на сервер и обработка результата\n\n\n    onRegister(values).then(resetFrom()).catch(err => {\n      console.log(err.message || 'Что то пошло не так');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"register content page__content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"register__title\",\n        children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"register__form\",\n        name: \"form\",\n        id: \"form-with-register\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: `register__input register__input_type_email\n        ${isValidInputs.email ? 'register__input_state_valid' : ''}`,\n          type: \"email\",\n          placeholder: \"Email\",\n          name: \"email\",\n          id: \"register-input-email\",\n          minLength: \"2\",\n          maxLength: \"100\",\n          value: values.email || \"\",\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"register-input-email-error\",\n          className: \"register__error\",\n          children: errors.email || \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: `register__input register__input_type_password\n        ${isValidInputs.password ? 'register__input_state_valid' : ''}`,\n          type: \"password\",\n          placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          name: \"password\",\n          id: \"register-input-password\",\n          minLength: \"6\",\n          maxLength: \"50\",\n          value: values.password || \"\",\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"register-input-password-error\",\n          className: \"register__error\",\n          children: errors.password || \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: `register__input register__input_type_confirm-password\n        ${isValidInputs.confirmation ? 'register__input_state_valid' : ''}`,\n          type: \"password\",\n          placeholder: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          name: \"confirmation\",\n          id: \"register-input-confirm-password\",\n          minLength: \"2\",\n          maxLength: \"50\",\n          value: values.confirmation || \"\",\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"register-input-confirm-password-error\",\n          className: \"register__error\",\n          children: errors.confirmation || \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `button register__button-submit \n            ${!isValid ? 'register__button-submit_invalid' : ''}`,\n          type: \"submit\",\n          children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register__signin\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u0423\\u0436\\u0435 \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u044B? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/sign-in\",\n            className: \"register__login-link\",\n            children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"dGDyABhnSH7URzFs/zUUPbaYjbM=\", false, function () {\n  return [useFormWithValidation];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/al55/dev/react-mesto-api-full/frontend/src/components/Register.js"],"names":["React","Link","useFormWithValidation","Register","onRegister","values","handleChange","resetFrom","errors","isValid","isValidInputs","handleSubmit","e","preventDefault","password","confirmation","email","then","catch","err","console","log","message"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useFormWithValidation } from \"../hooks/useFormWithValidation\";\n\nconst Register = ({ onRegister }) => {\n\n  // Используем пользовательский Хук\n  const {\n    values,\n    handleChange,\n    resetFrom,\n    errors,\n    isValid,\n    isValidInputs\n  } = useFormWithValidation();\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Проверяем совпадение паролей\n    if (values.password !== values.confirmation) {\n\n      resetFrom({\n        email: values.email,\n      }, {\n        password: 'Пароли не совпадают',\n        confirmation: 'Пароли не совпадают'\n      }, false, {\n        email: true,\n      })\n      return;\n    }\n\n    // Запрос на сервер и обработка результата\n    onRegister(values)\n      .then(resetFrom())\n      .catch(err => {\n        console.log(err.message || 'Что то пошло не так')\n      })\n  }\n\n  return (\n    <main className=\"register content page__content\">\n      <div className=\"register__container\">\n        <h2 className=\"register__title\">Регистрация</h2>\n        <form\n          className=\"register__form\"\n          name=\"form\"\n          id=\"form-with-register\"\n          onSubmit={handleSubmit}>\n\n          <input\n            className={`register__input register__input_type_email\n        ${isValidInputs.email\n                ? 'register__input_state_valid'\n                : ''\n              }`}\n            type=\"email\"\n            placeholder=\"Email\"\n            name=\"email\"\n            id=\"register-input-email\"\n            minLength=\"2\"\n            maxLength=\"100\"\n            value={values.email || \"\"}\n            onChange={handleChange}\n            required\n          />\n          <span\n            id=\"register-input-email-error\"\n            className=\"register__error\">\n            {errors.email || \"\"}\n          </span>\n\n          <input\n            className={`register__input register__input_type_password\n        ${isValidInputs.password\n                ? 'register__input_state_valid'\n                : ''\n              }`}\n            type=\"password\"\n            placeholder=\"Пароль\"\n            name=\"password\"\n            id=\"register-input-password\"\n            minLength=\"6\"\n            maxLength=\"50\"\n            value={values.password || \"\"}\n            onChange={handleChange}\n            required\n          />\n          <span\n            id=\"register-input-password-error\"\n            className=\"register__error\">\n            {errors.password || \"\"}\n          </span>\n\n          <input\n            className={`register__input register__input_type_confirm-password\n        ${isValidInputs.confirmation\n                ? 'register__input_state_valid'\n                : ''\n              }`}\n            type=\"password\"\n            placeholder=\"Подтвердите пароль\"\n            name=\"confirmation\"\n            id=\"register-input-confirm-password\"\n            minLength=\"2\"\n            maxLength=\"50\"\n            value={values.confirmation || \"\"}\n            onChange={handleChange}\n            required\n          />\n          <span\n            id=\"register-input-confirm-password-error\"\n            className=\"register__error\">\n            {errors.confirmation || \"\"}\n          </span>\n\n          <button\n            className={`button register__button-submit \n            ${!isValid\n                ? 'register__button-submit_invalid'\n                : ''\n              }`}\n            type=\"submit\">\n            Зарегистрироваться\n          </button>\n        </form>\n        <div className=\"register__signin\">\n          <p>Уже зарегистрированы? <Link to=\"/sign-in\" className=\"register__login-link\">Войти</Link></p>\n        </div>\n      </div>\n    </main>\n  );\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}