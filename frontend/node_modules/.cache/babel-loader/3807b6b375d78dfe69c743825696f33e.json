{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/al55/dev/react-mesto-api-full/frontend/src/components/PopupWithForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\n\nconst PopupWithForm = props => {\n  _s();\n\n  const {\n    children,\n    name,\n    title,\n    textButton,\n    isOpen,\n    onClose,\n    onSubmit,\n    isDisabled = false\n  } = props; // Реализация закрытия нажатием на ESC\n\n  useEffect(() => {\n    if (!isOpen) return;\n\n    const handleEscapeClose = event => {\n      if (event.key === \"Escape\") {\n        onClose();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleEscapeClose);\n    return () => {\n      document.removeEventListener(\"keydown\", handleEscapeClose);\n    };\n  }, [isOpen, onClose]); // Реализация закрытия по оверлею\n\n  const handleOverlayClose = e => {\n    if (e.target === e.currentTarget && isOpen) {\n      onClose();\n    }\n\n    return;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    onClick: handleOverlayClose,\n    className: `popup popup_type_${name} ${isOpen ? 'popup_opened' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button popup__button-close\",\n        type: \"button\",\n        onClick: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"popup__title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"popup__form\",\n        name: name,\n        id: name,\n        onSubmit: onSubmit,\n        children: [children, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `button popup__button-submit \n            ${isDisabled ? 'popup__button-submit_invalid' : ''}`,\n          type: \"submit\",\n          children: textButton || \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PopupWithForm, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = PopupWithForm;\nexport default PopupWithForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopupWithForm\");","map":{"version":3,"sources":["/Users/al55/dev/react-mesto-api-full/frontend/src/components/PopupWithForm.js"],"names":["React","useEffect","PopupWithForm","props","children","name","title","textButton","isOpen","onClose","onSubmit","isDisabled","handleEscapeClose","event","key","document","addEventListener","removeEventListener","handleOverlayClose","e","target","currentTarget"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC/B,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,IAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,UAJI;AAKJC,IAAAA,MALI;AAMJC,IAAAA,OANI;AAOJC,IAAAA,QAPI;AAQJC,IAAAA,UAAU,GAAG;AART,MASFR,KATJ,CAD+B,CAY/B;;AACAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACO,MAAL,EAAa;;AACb,UAAMI,iBAAiB,GAAIC,KAAD,IAAW;AACnC,UAAIA,KAAK,CAACC,GAAN,KAAc,QAAlB,EAA4B;AAC1BL,QAAAA,OAAO;AACR;AACF,KAJD;;AAKAM,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCJ,iBAArC;AACA,WAAO,MAAM;AACXG,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,SAA7B,EAAwCL,iBAAxC;AACD,KAFD;AAGD,GAXQ,EAWN,CAACJ,MAAD,EAASC,OAAT,CAXM,CAAT,CAb+B,CA0B/B;;AACA,QAAMS,kBAAkB,GAAIC,CAAD,IAAO;AAChC,QAAIA,CAAC,CAACC,MAAF,KAAaD,CAAC,CAACE,aAAf,IAAgCb,MAApC,EAA4C;AAC1CC,MAAAA,OAAO;AACR;;AACD;AACD,GALD;;AAOA,sBACE;AACE,IAAA,OAAO,EAAES,kBADX;AAEE,IAAA,SAAS,EAAG,oBAAmBb,IAAK,IAAGG,MAAM,GAAG,cAAH,GAAoB,EAAG,EAFtE;AAAA,2BAGE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,4BADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,OAAO,EAAEC;AAHX;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA,kBAA8BH;AAA9B;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AACE,QAAA,SAAS,EAAE,aADb;AAEE,QAAA,IAAI,EAAED,IAFR;AAGE,QAAA,EAAE,EAAEA,IAHN;AAIE,QAAA,QAAQ,EAAEK,QAJZ;AAAA,mBAMGN,QANH,eAOE;AACE,UAAA,SAAS,EAAG;AACxB,cAAcO,UAAU,GACN,8BADM,GAEN,EACH,EALL;AAME,UAAA,IAAI,EAAE,QANR;AAAA,oBAOGJ,UAAU,IAAI;AAPjB;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CAjED;;GAAML,a;;KAAAA,a;AAmEN,eAAeA,aAAf","sourcesContent":["import React, { useEffect } from 'react';\n\nconst PopupWithForm = (props) => {\n  const {\n    children,\n    name,\n    title,\n    textButton,\n    isOpen,\n    onClose,\n    onSubmit,\n    isDisabled = false\n  } = props;\n\n  // Реализация закрытия нажатием на ESC\n  useEffect(() => {\n    if (!isOpen) return;\n    const handleEscapeClose = (event) => {\n      if (event.key === \"Escape\") {\n        onClose();\n      }\n    };\n    document.addEventListener(\"keydown\", handleEscapeClose);\n    return () => {\n      document.removeEventListener(\"keydown\", handleEscapeClose);\n    };\n  }, [isOpen, onClose]);\n\n  // Реализация закрытия по оверлею\n  const handleOverlayClose = (e) => {\n    if (e.target === e.currentTarget && isOpen) {\n      onClose();\n    }\n    return;\n  };\n\n  return (\n    <section\n      onClick={handleOverlayClose}\n      className={`popup popup_type_${name} ${isOpen ? 'popup_opened' : ''}`}>\n      <div className=\"popup__container\">\n        <button\n          className=\"button popup__button-close\"\n          type=\"button\"\n          onClick={onClose}\n        />\n        <h2 className=\"popup__title\">{title}</h2>\n        <form\n          className={\"popup__form\"}\n          name={name}\n          id={name}\n          onSubmit={onSubmit}\n        >\n          {children}\n          <button\n            className={`button popup__button-submit \n            ${isDisabled\n                ? 'popup__button-submit_invalid'\n                : ''\n              }`}\n            type={\"submit\"}>\n            {textButton || \"\"}\n          </button>\n        </form>\n      </div>\n    </section>\n  );\n}\n\nexport default PopupWithForm;"]},"metadata":{},"sourceType":"module"}