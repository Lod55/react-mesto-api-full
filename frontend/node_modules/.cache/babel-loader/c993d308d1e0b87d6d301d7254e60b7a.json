{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/al55/dev/react-mesto-api-full/frontend/src/components/EditProfilePopup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport PopupWithForm from './PopupWithForm';\nimport { useFormWithValidation } from \"../hooks/useFormWithValidation\";\n\nconst EditProfilePopup = props => {\n  _s();\n\n  // Диструктуризированная переменная с пропсами\n  const {\n    onUpdateUser,\n    isOpen,\n    onClose\n  } = props; // Используем пользовательский Хук\n\n  const {\n    values,\n    handleChange,\n    resetFrom,\n    errors,\n    isValid,\n    isValidInputs\n  } = useFormWithValidation(); // Контекст с данными о пользователе\n\n  const currentUser = useContext(CurrentUserContext);\n  useEffect(() => {\n    if (currentUser) {\n      resetFrom({\n        name: currentUser.name,\n        about: currentUser.about\n      }, {}, false, {});\n    }\n  }, [currentUser, resetFrom]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onUpdateUser(values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"popup-profile\",\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    textButton: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    isOpen: isOpen,\n    onClose: onClose,\n    onSubmit: handleSubmit,\n    isDisabled: !isValid,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: `popup__input popup__input_type_author \n        ${isValidInputs.name ? 'popup__input_state_valid' : ''}`,\n      type: \"text\",\n      placeholder: \"\\u0412\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F\",\n      id: \"popup-input-name\",\n      name: \"name\",\n      minLength: \"2\",\n      maxLength: \"40\",\n      value: values.name || \"\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"popup-input-name-error\",\n      className: \"popup__error\",\n      children: errors.name || \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: `popup__input popup__input_type_status \n        ${isValidInputs.about ? 'popup__input_state_valid' : ''}`,\n      type: \"text\",\n      placeholder: \"\\u0420\\u0430\\u0441\\u0441\\u043A\\u0430\\u0436\\u0438\\u0442\\u0435 \\u043E \\u0441\\u0435\\u0431\\u0435\",\n      id: \"popup-input-status\",\n      name: \"about\",\n      minLength: \"2\",\n      maxLength: \"200\",\n      value: values.about || \"\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"popup-input-status-error\",\n      className: \"popup__error\",\n      children: errors.about || \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditProfilePopup, \"eqCiPrPm73F9ZFIn7FQL2EcE8dc=\", false, function () {\n  return [useFormWithValidation];\n});\n\n_c = EditProfilePopup;\nexport default EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["/Users/al55/dev/react-mesto-api-full/frontend/src/components/EditProfilePopup.js"],"names":["React","useContext","useEffect","CurrentUserContext","PopupWithForm","useFormWithValidation","EditProfilePopup","props","onUpdateUser","isOpen","onClose","values","handleChange","resetFrom","errors","isValid","isValidInputs","currentUser","name","about","handleSubmit","e","preventDefault"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport PopupWithForm from './PopupWithForm';\nimport { useFormWithValidation } from \"../hooks/useFormWithValidation\";\n\nconst EditProfilePopup = (props) => {\n  // Диструктуризированная переменная с пропсами\n  const {\n    onUpdateUser,\n    isOpen,\n    onClose\n  } = props;\n\n  // Используем пользовательский Хук\n  const {\n    values,\n    handleChange,\n    resetFrom,\n    errors,\n    isValid,\n    isValidInputs\n  } = useFormWithValidation();\n\n  // Контекст с данными о пользователе\n  const currentUser = useContext(CurrentUserContext);\n\n  useEffect(() => {\n    if (currentUser) {\n      resetFrom({\n        name: currentUser.name,\n        about: currentUser.about\n      }, {}, false, {});\n    }\n  }, [currentUser, resetFrom]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onUpdateUser(values)\n  }\n\n  return (\n    <PopupWithForm\n      name=\"popup-profile\"\n      title=\"Редактировать профиль\"\n      textButton=\"Сохранить\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      isDisabled={!isValid}\n    >\n      <input\n        className={`popup__input popup__input_type_author \n        ${isValidInputs.name\n            ? 'popup__input_state_valid'\n            : ''\n          }`}\n        type=\"text\"\n        placeholder=\"Ваше имя\"\n        id=\"popup-input-name\"\n        name='name'\n        minLength=\"2\"\n        maxLength=\"40\"\n        value={values.name || \"\"}\n        onChange={handleChange}\n        required\n      />\n      <span\n        id=\"popup-input-name-error\"\n        className=\"popup__error\">\n        {errors.name || \"\"}\n      </span>\n\n      <input\n        className={`popup__input popup__input_type_status \n        ${isValidInputs.about\n            ? 'popup__input_state_valid'\n            : ''\n          }`}\n        type=\"text\"\n        placeholder=\"Расскажите о себе\"\n        id=\"popup-input-status\"\n        name='about'\n        minLength=\"2\"\n        maxLength=\"200\"\n        value={values.about || \"\"}\n        onChange={handleChange}\n        required\n      />\n      <span\n        id=\"popup-input-status-error\"\n        className=\"popup__error\">\n        {errors.about || \"\"}\n      </span>\n\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;\n"]},"metadata":{},"sourceType":"module"}