{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/al55/dev/react-mesto-api-full/frontend/src/components/ImagePopup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\n\nconst ImagePopup = props => {\n  _s();\n\n  // Диструктуризированная переменная с пропсами\n  const {\n    card,\n    onClose\n  } = props; // Реализация закрытия нажатием на ESC\n\n  useEffect(() => {\n    const handleEscapeClose = event => {\n      if (event.key === \"Escape\") {\n        onClose();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleEscapeClose);\n    return () => {\n      document.removeEventListener(\"keydown\", handleEscapeClose);\n    };\n  }, [onClose]); // Реализация закрытия по оверлею\n\n  const handleOverlayClose = event => {\n    if (event.target === event.currentTarget) {\n      onClose();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    onClick: handleOverlayClose,\n    className: `popup popup_blackout \n    ${card.isOpen ? 'popup_opened' : ''}`,\n    id: \"popup-image\",\n    children: /*#__PURE__*/_jsxDEV(\"figure\", {\n      className: \"popup__figure\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button popup__button-close\",\n        type: \"button\",\n        onClick: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"popup__image\",\n        alt: card.name,\n        src: card.link\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"figcaption\", {\n        className: \"popup__caption\",\n        children: [card.name, \" / \\xA9 \", card.owner.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImagePopup, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ImagePopup;\nexport default ImagePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImagePopup\");","map":{"version":3,"sources":["/Users/al55/dev/react-mesto-api-full/frontend/src/components/ImagePopup.js"],"names":["React","useEffect","ImagePopup","props","card","onClose","handleEscapeClose","event","key","document","addEventListener","removeEventListener","handleOverlayClose","target","currentTarget","isOpen","name","link","owner"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B;AACA,QAAM;AACJC,IAAAA,IADI;AAEJC,IAAAA;AAFI,MAGFF,KAHJ,CAF4B,CAO5B;;AACAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,iBAAiB,GAAIC,KAAD,IAAW;AACnC,UAAIA,KAAK,CAACC,GAAN,KAAc,QAAlB,EAA4B;AAC1BH,QAAAA,OAAO;AACR;AACF,KAJD;;AAKAI,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCJ,iBAArC;AACA,WAAO,MAAM;AACXG,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,SAA7B,EAAwCL,iBAAxC;AACD,KAFD;AAGD,GAVQ,EAUN,CAACD,OAAD,CAVM,CAAT,CAR4B,CAoB5B;;AACA,QAAMO,kBAAkB,GAAIL,KAAD,IAAW;AACpC,QAAIA,KAAK,CAACM,MAAN,KAAiBN,KAAK,CAACO,aAA3B,EAA0C;AACxCT,MAAAA,OAAO;AACR;AACF,GAJD;;AAMA,sBACE;AACE,IAAA,OAAO,EAAEO,kBADX;AAEE,IAAA,SAAS,EAAG;AAClB,MAAMR,IAAI,CAACW,MAAL,GACM,cADN,GAEM,EACH,EANL;AAOE,IAAA,EAAE,EAAC,aAPL;AAAA,2BAQE;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,4BADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,OAAO,EAAEV;AAHX;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,GAAG,EAAED,IAAI,CAACY,IAFZ;AAGE,QAAA,GAAG,EAAEZ,IAAI,CAACa;AAHZ;AAAA;AAAA;AAAA;AAAA,cANF,eAWE;AACE,QAAA,SAAS,EAAC,gBADZ;AAAA,mBAEGb,IAAI,CAACY,IAFR,cAEwBZ,IAAI,CAACc,KAAL,CAAWF,IAFnC;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CAtDD;;GAAMd,U;;KAAAA,U;AAwDN,eAAeA,UAAf","sourcesContent":["import React, { useEffect } from 'react';\n\nconst ImagePopup = (props) => {\n  // Диструктуризированная переменная с пропсами\n  const {\n    card,\n    onClose\n  } = props;\n\n  // Реализация закрытия нажатием на ESC\n  useEffect(() => {\n    const handleEscapeClose = (event) => {\n      if (event.key === \"Escape\") {\n        onClose();\n      }\n    };\n    document.addEventListener(\"keydown\", handleEscapeClose);\n    return () => {\n      document.removeEventListener(\"keydown\", handleEscapeClose);\n    };\n  }, [onClose]);\n\n  // Реализация закрытия по оверлею\n  const handleOverlayClose = (event) => {\n    if (event.target === event.currentTarget) {\n      onClose();\n    }\n  };\n\n  return (\n    <section\n      onClick={handleOverlayClose}\n      className={`popup popup_blackout \n    ${card.isOpen\n          ? 'popup_opened'\n          : ''\n        }`}\n      id=\"popup-image\">\n      <figure className=\"popup__figure\">\n        <button\n          className=\"button popup__button-close\"\n          type=\"button\"\n          onClick={onClose}\n        />\n        <img\n          className=\"popup__image\"\n          alt={card.name}\n          src={card.link}\n        />\n        <figcaption\n          className=\"popup__caption\">\n          {card.name} / &copy; {card.owner.name}\n        </figcaption>\n      </figure>\n    </section>\n  );\n}\n\nexport default ImagePopup;"]},"metadata":{},"sourceType":"module"}