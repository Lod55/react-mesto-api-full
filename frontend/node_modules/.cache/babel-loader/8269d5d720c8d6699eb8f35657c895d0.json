{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/al55/dev/react-mesto-api-full/frontend/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'; // popup components\n\nimport InfoTooltip from './InfoTooltip'; // pages components\n\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport Register from './Register';\nimport Login from './Login';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer'; // api\n\nimport * as api from '../utils/api.js'; // import * as auth from '../utils/auth';\n// import api from '../utils/api.js'\n\nconst App = () => {\n  _s();\n\n  // // Дефолтные значение данных пользователя для api\n  // const initialData = {\n  //   email: ''\n  // }\n  // Стейт переменные компонента\n  const [isInfoTooltipPopupOpen, setIsInfoTooltipPopupOpen] = useState(false);\n  const [cards, setCards] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentUser, setCurrentUser] = useState({});\n  const [loggedIn, setLoggedIn] = useState(false); // const [data, setData] = useState(initialData);\n\n  const [isSuccess, setIsSuccess] = useState(false);\n  const history = useHistory(); // функция закрытия попапа\n\n  const closePopup = () => {\n    setIsInfoTooltipPopupOpen(false);\n  }; // ---------- Функции основного Api ----------\n  // Проверка наличия ответа сервера\n\n\n  const responseCheck = res => {\n    if (!res) throw new Error(`Error: ${res.message}`);\n  }; // Отправка информации на сервер\n\n\n  const handleUpdateUser = data => {\n    return api.setInfoUser(data).then(res => {\n      responseCheck(res);\n      setCurrentUser(res);\n      return res;\n    });\n  }; // Изменение аватара на сервере и отрисовка\n\n\n  const handleUpdateAvatar = src => {\n    return api.setUserAvatar(src).then(res => {\n      responseCheck(res);\n      setCurrentUser(res);\n      return res;\n    });\n  }; // Добавление новой карточки на сервер и отрисовка\n\n\n  const handleAddPlaceSubmit = ({\n    name,\n    link\n  }) => {\n    return api.setCard({\n      name,\n      link\n    }).then(res => {\n      responseCheck(res);\n      setCards([res, ...cards]);\n      return res;\n    });\n  }; // Контоль состояния лайка и работа с состоянием на сервере\n\n\n  const handleCardLike = card => {\n    const isLiked = card.likes.some(item => item._id === currentUser._id);\n    return api.changeLikeCardStatus(card._id, isLiked).then(res => {\n      responseCheck(res);\n      setCards(state => state.map(item => item._id === card._id ? res : item));\n      return res;\n    });\n  }; // Удаления карточки с сервера\n\n\n  const handleCardDelete = useCardId => {\n    return api.removeCard(useCardId).then(res => {\n      responseCheck(res);\n      setCards(state => state.filter(item => item._id === useCardId ? null : item));\n      return res;\n    });\n  }; // useEffect(() => {\n  //   setIsLoading(true)\n  //   api.getInitialCards()\n  //     .then(res => {\n  //       responseCheck(res)\n  //       setCards(res)\n  //     })\n  //     .catch(err => console.log(`Error: ${err}`))\n  //     .finally(() => setIsLoading(false))\n  // }, []);\n  // useEffect(() => {\n  //   api.getInfoUser()\n  //     .then(res => {\n  //       setCurrentUser(res);\n  //     })\n  //     .catch(err => console.log(`Error: ${err}`));\n  // }, []);\n  // ---------- Функции запросов api/auth ----------\n  // Проверка токена пользователя на подленность на сервере\n  // проверка, что пользователь уже авторизован\n\n\n  const [isAuthChecking, setIsAuthChecking] = useState(true);\n  const tokenCheck = useCallback(() => {\n    // const jwt = localStorage.getItem('jwt');\n    const cookieJwt = document.cookie.jwt;\n\n    if (cookieJwt) {\n      setIsLoading(true);\n      setIsAuthChecking(true);\n      api.getInfoUser().then(res => {\n        responseCheck(res);\n        setCurrentUser(res);\n      }).catch(() => history.push('/sign-in')).finally(() => setIsAuthChecking(false));\n      api.getInitialCards().then(res => {\n        responseCheck(res);\n        setCards(res);\n      }).catch(err => console.log(`Error: ${err}`)).finally(() => setIsLoading(false));\n    } else {\n      setIsAuthChecking(false);\n    }\n  }, [history]);\n  useEffect(() => {\n    tokenCheck();\n  }, [tokenCheck]); // Регистрации пользователя на сервере\n\n  const handleRegister = ({\n    password,\n    email\n  }) => {\n    return api.register({\n      password,\n      email\n    }).then(res => {\n      responseCheck(res);\n      if (!res || res.statusCode === 400) throw new Error(`Ошибка: ${res.message}`);\n      setIsInfoTooltipPopupOpen(true);\n      setIsSuccess(true);\n      history.push('/sign-in');\n      return res;\n    }).catch(err => {\n      setIsInfoTooltipPopupOpen(true);\n      setIsSuccess(false);\n      return err;\n    });\n  }; // Авторизации пользователя\n\n\n  const handleLogin = ({\n    password,\n    email\n  }) => {\n    return api.authorize({\n      password,\n      email\n    }).then(res => {\n      responseCheck(res);\n      if (!res || res.statusCode === 400 || res.statusCode === 401) throw new Error(`Ошибка: ${res.message}`);\n\n      if (res.massege === \"Авторизация прошла успешно!\") {\n        setIsInfoTooltipPopupOpen(true);\n        setIsSuccess(true);\n        setLoggedIn(true); // localStorage.setItem('jwt', res.token);\n      }\n\n      ;\n    }).then(tokenCheck).catch(err => {\n      setIsInfoTooltipPopupOpen(true);\n      setIsSuccess(false);\n      return err;\n    });\n  }; // Выход из системы\n\n\n  const handleSignOut = () => {\n    // localStorage.removeItem('jwt');\n    api.signOut().then(res => {\n      responseCheck(res); // setData(initialData);\n\n      setLoggedIn(false);\n      history.push('/sign-in');\n    }).catch(err => console.log(`Error: ${err}`));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page__container\",\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        loggedIn: loggedIn,\n        onSignOut: handleSignOut,\n        userEmail: currentUser.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          path: \"/mesto\",\n          loggedIn: loggedIn,\n          isChecking: isAuthChecking,\n          exact: true,\n          children: /*#__PURE__*/_jsxDEV(Main, {\n            onCardDelete: handleCardDelete,\n            onCardLike: handleCardLike,\n            onAddPlaceSubmit: handleAddPlaceSubmit,\n            onUpdateAvatar: handleUpdateAvatar,\n            onUpdateUser: handleUpdateUser,\n            cards: cards,\n            isLoading: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-in\",\n          exact: true,\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            onLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-up\",\n          exact: true,\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            onRegister: handleRegister\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          children: loggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/mesto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/sign-in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        isOpen: isInfoTooltipPopupOpen,\n        onClose: closePopup,\n        isSuccess: isSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"e0eHMjNGZFfXtUQlJzIR2gUOEL4=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/al55/dev/react-mesto-api-full/frontend/src/components/App.js"],"names":["React","useState","useEffect","useCallback","Route","Switch","Redirect","useHistory","CurrentUserContext","InfoTooltip","ProtectedRoute","Register","Login","Header","Main","Footer","api","App","isInfoTooltipPopupOpen","setIsInfoTooltipPopupOpen","cards","setCards","isLoading","setIsLoading","currentUser","setCurrentUser","loggedIn","setLoggedIn","isSuccess","setIsSuccess","history","closePopup","responseCheck","res","Error","message","handleUpdateUser","data","setInfoUser","then","handleUpdateAvatar","src","setUserAvatar","handleAddPlaceSubmit","name","link","setCard","handleCardLike","card","isLiked","likes","some","item","_id","changeLikeCardStatus","state","map","handleCardDelete","useCardId","removeCard","filter","isAuthChecking","setIsAuthChecking","tokenCheck","cookieJwt","document","cookie","jwt","getInfoUser","catch","push","finally","getInitialCards","err","console","log","handleRegister","password","email","register","statusCode","handleLogin","authorize","massege","handleSignOut","signOut"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\n// popup components\nimport InfoTooltip from './InfoTooltip';\n\n// pages components\nimport ProtectedRoute from \"./ProtectedRoute\"\nimport Register from './Register';\nimport Login from './Login';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\n\n// api\nimport * as api from '../utils/api.js';\n// import * as auth from '../utils/auth';\n// import api from '../utils/api.js'\n\nconst App = () => {\n  // // Дефолтные значение данных пользователя для api\n  // const initialData = {\n  //   email: ''\n  // }\n\n  // Стейт переменные компонента\n  const [isInfoTooltipPopupOpen, setIsInfoTooltipPopupOpen] = useState(false);\n  const [cards, setCards] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentUser, setCurrentUser] = useState({});\n  const [loggedIn, setLoggedIn] = useState(false);\n  // const [data, setData] = useState(initialData);\n  const [isSuccess, setIsSuccess] = useState(false);\n\n  const history = useHistory();\n\n  // функция закрытия попапа\n  const closePopup = () => {\n    setIsInfoTooltipPopupOpen(false)\n  }\n\n\n  // ---------- Функции основного Api ----------\n  // Проверка наличия ответа сервера\n  const responseCheck = (res) => {\n    if (!res) throw new Error(`Error: ${res.message}`);\n  }\n\n  // Отправка информации на сервер\n  const handleUpdateUser = (data) => {\n    return api.setInfoUser(data)\n      .then(res => {\n        responseCheck(res);\n        setCurrentUser(res);\n        return res;\n      })\n  }\n\n  // Изменение аватара на сервере и отрисовка\n  const handleUpdateAvatar = (src) => {\n    return api.setUserAvatar(src)\n      .then(res => {\n        responseCheck(res);\n        setCurrentUser(res);\n        return res;\n      })\n  }\n\n  // Добавление новой карточки на сервер и отрисовка\n  const handleAddPlaceSubmit = ({ name, link }) => {\n    return api.setCard({ name, link })\n      .then(res => {\n        responseCheck(res);\n        setCards([res, ...cards]);\n        return res;\n      })\n  }\n\n  // Контоль состояния лайка и работа с состоянием на сервере\n  const handleCardLike = (card) => {\n    const isLiked = card.likes.some(item => item._id === currentUser._id);\n\n    return api.changeLikeCardStatus(card._id, isLiked)\n      .then(res => {\n        responseCheck(res);\n        setCards(state => state.map(item => item._id === card._id ? res : item));\n        return res;\n      })\n  }\n\n  // Удаления карточки с сервера\n  const handleCardDelete = (useCardId) => {\n    return api.removeCard(useCardId)\n      .then(res => {\n        responseCheck(res);\n        setCards(state => state.filter(item => item._id === useCardId ? null : item));\n        return res;\n      })\n  }\n\n  // useEffect(() => {\n  //   setIsLoading(true)\n  //   api.getInitialCards()\n  //     .then(res => {\n  //       responseCheck(res)\n  //       setCards(res)\n  //     })\n  //     .catch(err => console.log(`Error: ${err}`))\n  //     .finally(() => setIsLoading(false))\n  // }, []);\n\n  // useEffect(() => {\n  //   api.getInfoUser()\n  //     .then(res => {\n  //       setCurrentUser(res);\n  //     })\n  //     .catch(err => console.log(`Error: ${err}`));\n  // }, []);\n\n  // ---------- Функции запросов api/auth ----------\n  // Проверка токена пользователя на подленность на сервере\n  // проверка, что пользователь уже авторизован\n  const [isAuthChecking, setIsAuthChecking] = useState(true);\n  const tokenCheck = useCallback(() => {\n    // const jwt = localStorage.getItem('jwt');\n    const cookieJwt = document.cookie.jwt;\n\n    if (cookieJwt) {\n      setIsLoading(true)\n      setIsAuthChecking(true);\n\n      api.getInfoUser()\n        .then(res => {\n          responseCheck(res);\n          setCurrentUser(res);\n        })\n        .catch(() => history.push('/sign-in'))\n        .finally(() => setIsAuthChecking(false));\n\n      api.getInitialCards()\n        .then(res => {\n          responseCheck(res)\n          setCards(res)\n        })\n        .catch(err => console.log(`Error: ${err}`))\n        .finally(() => setIsLoading(false))\n\n    } else {\n      setIsAuthChecking(false)\n    }\n  }, [history])\n\n  useEffect(() => {\n    tokenCheck();\n  }, [tokenCheck])\n\n  // Регистрации пользователя на сервере\n  const handleRegister = ({ password, email }) => {\n    return api.register({ password, email })\n      .then(res => {\n        responseCheck(res);\n        if (!res || res.statusCode === 400) throw new Error(`Ошибка: ${res.message}`)\n        setIsInfoTooltipPopupOpen(true);\n        setIsSuccess(true);\n        history.push('/sign-in');\n        return res;\n      })\n      .catch(err => {\n        setIsInfoTooltipPopupOpen(true);\n        setIsSuccess(false);\n        return err;\n      })\n  }\n\n  // Авторизации пользователя\n  const handleLogin = ({ password, email }) => {\n    return api.authorize({ password, email })\n      .then(res => {\n        responseCheck(res);\n        if (!res || res.statusCode === 400 || res.statusCode === 401) throw new Error(`Ошибка: ${res.message}`)\n        if (res.massege === \"Авторизация прошла успешно!\") {\n          setIsInfoTooltipPopupOpen(true);\n          setIsSuccess(true);\n          setLoggedIn(true);\n          // localStorage.setItem('jwt', res.token);\n        };\n      })\n      .then(tokenCheck)\n      .catch(err => {\n        setIsInfoTooltipPopupOpen(true);\n        setIsSuccess(false);\n        return err;\n      })\n  }\n\n  // Выход из системы\n  const handleSignOut = () => {\n    // localStorage.removeItem('jwt');\n    api.signOut()\n      .then((res) => {\n        responseCheck(res);\n        // setData(initialData);\n        setLoggedIn(false);\n        history.push('/sign-in');\n      })\n      .catch((err) => console.log(`Error: ${err}`))\n  }\n\n  return (\n    <div className=\"page__container\">\n      <CurrentUserContext.Provider value={currentUser}>\n        <Header\n          loggedIn={loggedIn}\n          onSignOut={handleSignOut}\n          userEmail={currentUser.email}\n        />\n\n        <Switch>\n          <ProtectedRoute\n            path=\"/mesto\"\n            loggedIn={loggedIn}\n            isChecking={isAuthChecking}\n            exact>\n            <Main\n              onCardDelete={handleCardDelete}\n              onCardLike={handleCardLike}\n              onAddPlaceSubmit={handleAddPlaceSubmit}\n              onUpdateAvatar={handleUpdateAvatar}\n              onUpdateUser={handleUpdateUser}\n              cards={cards}\n              isLoading={isLoading}\n            />\n          </ProtectedRoute>\n\n          <Route path='/sign-in' exact>\n            <Login onLogin={handleLogin} />\n          </Route>\n\n          <Route path='/sign-up' exact>\n            <Register onRegister={handleRegister} />\n          </Route>\n\n          <Route path=\"*\">\n            {loggedIn\n              ? <Redirect to=\"/mesto\" />\n              : <Redirect to=\"/sign-in\" />}\n          </Route>\n        </Switch>\n\n        <Footer />\n\n        <InfoTooltip\n          isOpen={isInfoTooltipPopupOpen}\n          onClose={closePopup}\n          isSuccess={isSuccess}\n        />\n\n      </CurrentUserContext.Provider>\n    </div>\n  )\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}