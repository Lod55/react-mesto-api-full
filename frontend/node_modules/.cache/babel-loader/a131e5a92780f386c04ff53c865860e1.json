{"ast":null,"code":"const BASE_URL = 'https://';\n\nconst responseCheck = response => response.ok ? response.json() : Promise.reject(`Ошибка ${response.status}`); // GET reqests\n\n\nexport const getInfoUser = () => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(responseCheck);\n};\nexport const getInitialCards = () => {\n  return fetch(`${BASE_URL}/cards`, {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(responseCheck);\n}; // POST reqests\n\nexport const register = ({\n  password,\n  email\n}) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      \"password\": password,\n      \"email\": email\n    })\n  }).then(responseCheck);\n};\nexport const authorize = ({\n  password,\n  email\n}) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      \"password\": password,\n      \"email\": email\n    })\n  }).then(responseCheck);\n};\nexport const setCard = ({\n  name,\n  link\n}) => {\n  return fetch(`${BASE_URL}/cards`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      \"name\": name,\n      \"link\": link\n    })\n  }).then(responseCheck);\n}; // PATCH reqests\n\nexport const setInfoUser = ({\n  name,\n  about\n}) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'PATCH',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      \"name\": name,\n      \"about\": about\n    })\n  }).then(responseCheck);\n};\nexport const setUserAvatar = src => {\n  return fetch(`${BASE_URL}/users/me/avatar`, {\n    method: 'PATCH',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      \"avatar\": src\n    })\n  }).then(responseCheck);\n}; // PUT, DELETE reqests\n\nexport const changeLikeCardStatus = (id, isLiked) => {\n  return fetch(`${BASE_URL}/cards/${id}/likes`, {\n    method: isLiked ? 'DELETE' : 'PUT'\n  }).then(responseCheck);\n};\nexport const removeCard = id => {\n  return fetch(`${BASE_URL}/cards/${id}`, {\n    method: 'DELETE'\n  }).then(this._checkResponse);\n};\nexport const signOut = () => {\n  return fetch(`${BASE_URL}/signout`, {\n    method: 'DELETE'\n  }).then(this._checkResponse);\n};","map":{"version":3,"sources":["/Users/al55/dev/react-mesto-api-full/frontend/src/utils/api.js"],"names":["BASE_URL","responseCheck","response","ok","json","Promise","reject","status","getInfoUser","fetch","method","headers","then","getInitialCards","register","password","email","body","JSON","stringify","authorize","setCard","name","link","setInfoUser","about","setUserAvatar","src","changeLikeCardStatus","id","isLiked","removeCard","_checkResponse","signOut"],"mappings":"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","sourcesContent":["const BASE_URL = 'https://';\n\nconst responseCheck = (response) => response.ok\n  ? response.json()\n  : Promise.reject(`Ошибка ${response.status}`);\n\n// GET reqests\nexport const getInfoUser = () => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then(responseCheck)\n}\n\nexport const getInitialCards = () => {\n  return fetch(`${BASE_URL}/cards`, {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then(responseCheck)\n}\n\n// POST reqests\nexport const register = ({ password, email }) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      \"password\": password,\n      \"email\": email,\n    }),\n  })\n    .then(responseCheck)\n};\n\nexport const authorize = ({ password, email }) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      \"password\": password,\n      \"email\": email,\n    }),\n  })\n    .then(responseCheck)\n};\n\nexport const setCard = ({ name, link }) => {\n  return fetch(`${BASE_URL}/cards`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      \"name\": name,\n      \"link\": link,\n    }),\n  })\n    .then(responseCheck)\n}\n\n// PATCH reqests\nexport const setInfoUser = ({ name, about }) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'PATCH',\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      \"name\": name,\n      \"about\": about,\n    }),\n  })\n    .then(responseCheck)\n};\n\nexport const setUserAvatar = (src) => {\n  return fetch(`${BASE_URL}/users/me/avatar`, {\n    method: 'PATCH',\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      \"avatar\": src,\n    }),\n  })\n    .then(responseCheck)\n};\n\n// PUT, DELETE reqests\nexport const changeLikeCardStatus = (id, isLiked) => {\n  return fetch(`${BASE_URL}/cards/${id}/likes`, {\n    method: isLiked ? 'DELETE' : 'PUT',\n  })\n    .then(responseCheck)\n}\n\nexport const removeCard = (id) => {\n  return fetch(`${BASE_URL}/cards/${id}`, {\n    method: 'DELETE',\n  })\n    .then(this._checkResponse)\n}\n\nexport const signOut = () => {\n  return fetch(`${BASE_URL}/signout`, {\n    method: 'DELETE',\n  })\n    .then(this._checkResponse)\n}"]},"metadata":{},"sourceType":"module"}